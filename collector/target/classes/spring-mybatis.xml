<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- mybatis分页插件配置 -->
    <bean id="mybatisPageHelperProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath*:config-mybatisPageHelper.properties</value>
            </list>
        </property>
    </bean>

    <bean id="sqlSessionFactoryBean"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource"
                  ref="dataSource"/>
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="mapperLocations">
            <list>
                <!-- 注意：如果mapper.xml的路径与mapper接口类的路径是相同的，就不需要配置这个参数了，否则会出现java.lang.IllegalArgumentException: Result Maps collection already contains value for XXX的错误 -->
                <value>classpath*:**/*Mapper.xml</value>
            </list>
        </property>

        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties"
                              ref="mybatisPageHelperProperties"/>
                </bean>
            </array>
        </property>
    </bean>

    <bean id="mapperScannerConfigurer"
          class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 自动扫描 将Mapper接口生成代理注入到Spring，多个包用逗号分隔 -->
        <property name="basePackage"
                  value="com.ks.monitor.mapper"/>
        <property name="sqlSessionFactoryBeanName"
                  value="sqlSessionFactoryBean"/>
    </bean>

</beans>